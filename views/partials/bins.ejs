<link rel="stylesheet" href="/css/bins.css">

<% if (typeof bins != 'undefined') { %>
    <table class="bins__table">
        <thead class="bins__table-head">
            <tr class="bins__header-row text-6 uppercase">
                <th class="bins__header-cell code">código</th>
                <th class="bins__header-cell storage_level">nível de armazenamento</th>
                <th class="bins__header-cell district">bairro</th>
                <th class="bins__header-cell gathering_status">status</th>
                <th class="bins__header-cell right actions"></th>
            </tr>
        </thead>
        <tbody class="bins__table-body">
            <% for (var i = 0; i < bins.length; i++) { var bin = bins[i]; %>
                <tr aria-hidden class="bins__row--spacer"></tr>
                <tr id="bin-<%= bin._id%>" class="bins__row <%=
                    bin.storage_level <= 0.35
                        ? 'bins__row--green'
                        : bin.storage_level >= 0.70
                            ? 'bins__row--red'
                            : 'bins__row--yellow'
                %> text-6">
                    <td class="bins__cell code"><%= bin._id.toString().substr(0, 4) + '...' + bin._id.toString().substr(-4) %></td>
                    <td class="bins__cell storage_level">
                        <span class="content"><%= (bin.storage_level - 1) * -100 %>%</span>
                        <div class="loading-bar">
                            <div class="loading-bar__fill<%= bin.storage_level == 0 ? ' full' : '' %>" style="width: <%= (bin.storage_level - 1) * -100 %>%"></div>
                        </div>
                    </td>
                    <td class="bins__cell district"><%= bin.place.district %></td>
                    <td class="bins__cell gathering_status <%= bin.gathering_status == 'STATUS_INACTIVE' ? 'inactive' : bin.gathering_status == 'STATUS_ACTIVE' ? 'active' : '' %>">
                        <% if (bin.gathering_status == 'STATUS_INACTIVE') { %>
                            <span style="cursor: initial; display: block;" class="ic ic-block"></span>
                        <% } %>
                        <% if (bin.gathering_status == 'STATUS_ACTIVE') { %>
                            <span style="cursor: initial; display: block;" class="ic ic-check"></span>
                        <% } %>
                        <% if (bin.gathering_status == 'STATUS_GATHERING') { %>
                            <span style="cursor: initial; display: block;" class="ic ic-pause"></span>
                        <% } %>
                        <%= lang[bin.gathering_status] %>
                    </td>
                    <td class="bins__cell right actions">
                        <% if (typeof canEdit != 'undefined' && canEdit) { %>
                            <span title="Ainda não implementado" aria-label="Ainda não implementado" role="button" class="ic ic-edit"></span>
                        <% } %>
                        <% if (typeof canDelete != 'undefined' && canDelete) { %>
                            <button data-id="<%= bin._id%>" aria-label="Apagar bin de código <%= bin._id%>" role="button" class="bin-delete btn-xs btn--danger-ghost">
                                Deletar
                            </button>
                        <% } %>
                    </td>
                </tr>
            <% } %>
        </tbody>
    </table>
<% } %>
<script>
    const f5 = window.__f5__;
    const delBtns = document.querySelectorAll('.bin-delete');
    delBtns.forEach(delBtn => delBtn.addEventListener('click', function () {
        const binId = this.dataset.id;
        const url = `/bins/${binId}`;
        const deleteBinFn = () => {
            $.ajax({
                url,
                type: 'DELETE',
                success: (data) => {
                    f5.parseModalHTML(data, 'confirmed');
                    document.querySelector('.ic-close').addEventListener('click', () => {
                        const binRow = document.querySelector(`#bin-${binId}`);
                        if (!binRow) { return; }
                        const rowSpacer = binRow.previous;
                        if (rowSpacer) { rowSpacer.remove(); }
                        binRow.remove();
                    });
                }
            });
        };

        $.get(url, (data) => {
            f5.parseModalHTML(data, 'confirm');
            document.querySelector('#delete-btn').addEventListener('click', deleteBinFn);
        });
    }));
</script>

